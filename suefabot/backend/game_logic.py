from typing import Optional, Tuple
from config import Config


class GameLogic:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞"""
    
    @staticmethod
    def determine_winner(choice1: str, choice2: str) -> Tuple[Optional[int], str]:
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –≤ —Ä–∞—É–Ω–¥–µ
        
        Args:
            choice1: –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            choice2: –í—ã–±–æ—Ä –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            
        Returns:
            Tuple[Optional[int], str]: (winner_player_number, result_type)
            winner_player_number: 1, 2 –∏–ª–∏ None (–Ω–∏—á—å—è)
            result_type: 'win', 'draw'
        """
        if choice1 not in Config.CHOICES or choice2 not in Config.CHOICES:
            raise ValueError("Invalid choice")
        
        if choice1 == choice2:
            return None, 'draw'
        
        if Config.WINNING_RULES[choice1] == choice2:
            return 1, 'win'
        else:
            return 2, 'win'
    
    @staticmethod
    def calculate_stake_distribution(stake_amount: int, commission_rate: float = Config.COMMISSION_RATE) -> Tuple[int, int]:
        """
        –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏
        
        Args:
            stake_amount: –†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            commission_rate: –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5%)
            
        Returns:
            Tuple[int, int]: (winner_amount, commission_amount)
        """
        total_stake = stake_amount * 2
        commission = int(total_stake * commission_rate)
        winner_amount = total_stake - commission
        
        return winner_amount, commission
    
    @staticmethod
    def validate_stake(user_balance: int, stake_amount: int) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–≤–µ–∑–¥ –¥–ª—è —Å—Ç–∞–≤–∫–∏
        
        Args:
            user_balance: –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            stake_amount: –†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
        """
        return user_balance >= stake_amount and stake_amount > 0
    
    @staticmethod
    def get_choice_emoji(choice: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞"""
        emojis = {
            'rock': '‚úä',
            'scissors': '‚úåÔ∏è',
            'paper': '‚úã'
        }
        return emojis.get(choice, '‚ùì')
    
    @staticmethod
    def get_result_message(winner_id: Optional[int], player1_name: str, player2_name: str, 
                          choice1: str, choice2: str, promise: Optional[str] = None) -> str:
        """
        –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–∞—Ç—á–∞
        
        Args:
            winner_id: ID –ø–æ–±–µ–¥–∏—Ç–µ–ª—è (1, 2 –∏–ª–∏ None)
            player1_name: –ò–º—è –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            player2_name: –ò–º—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            choice1: –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            choice2: –í—ã–±–æ—Ä –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            promise: –¢–µ–∫—Å—Ç –æ–±–µ—â–∞–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        emoji1 = GameLogic.get_choice_emoji(choice1)
        emoji2 = GameLogic.get_choice_emoji(choice2)
        
        if winner_id is None:
            result = f"ü§ù **–ù–∏—á—å—è!**\n\n{player1_name} {emoji1} vs {emoji2} {player2_name}"
        elif winner_id == 1:
            result = f"üéâ **{player1_name} –ø–æ–±–µ–¥–∏–ª!**\n\n{player1_name} {emoji1} vs {emoji2} {player2_name}"
        else:
            result = f"üéâ **{player2_name} –ø–æ–±–µ–¥–∏–ª!**\n\n{player1_name} {emoji1} vs {emoji2} {player2_name}"
        
        if promise and winner_id is not None:
            loser = player2_name if winner_id == 1 else player1_name
            result += f"\n\nüìù –¢–µ–ø–µ—Ä—å {loser}: *{promise}*"
        
        return result