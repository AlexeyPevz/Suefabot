version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: suefabot
      POSTGRES_USER: suefabot
      POSTGRES_PASSWORD: ${DB_PASSWORD:-suefabot123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suefabot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://suefabot:${DB_PASSWORD:-suefabot123}@postgres:5432/suefabot
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key}
      BOT_TOKEN: ${BOT_TOKEN}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        python init_database.py &&
        gunicorn -k eventlet -w 1 --bind 0.0.0.0:5000 app:app
      "

  # Timeout Worker
  timeout_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://suefabot:${DB_PASSWORD:-suefabot123}@postgres:5432/suefabot
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: python timeout_worker.py

  # Telegram Bot
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBAPP_URL: ${WEBAPP_URL:-http://localhost:3000}
      API_URL: http://backend:5000
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql://suefabot:${DB_PASSWORD:-suefabot123}@postgres:5432/suefabot
      ENVIRONMENT: ${ENVIRONMENT:-development}
    depends_on:
      - backend
    volumes:
      - ./bot:/app

  # Web Application
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL:-ws://localhost:5000}
    ports:
      - "3000:80"
    volumes:
      - ./webapp:/app
      - /app/node_modules

  # Nginx (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - webapp
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: