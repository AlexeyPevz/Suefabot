import React from 'react';
import '../styles/animations.css';

const GameChoice = ({ 
  choice, 
  onClick, 
  disabled = false,
  isWinner = null,
  isAnimating = false,
  skin = 'default',
  size = 'medium'
}) => {
  // –ú–∞–ø–ø–∏–Ω–≥ –≤—ã–±–æ—Ä–æ–≤ –Ω–∞ —ç–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–ª–∏
  const choiceConfig = {
    rock: {
      emoji: '‚úä',
      label: '–ö–∞–º–µ–Ω—å',
      color: 'from-gray-400 to-gray-600',
      skins: {
        default: { emoji: '‚úä', effect: '' },
        gold: { emoji: '‚úä', effect: 'shimmer-effect', color: 'from-yellow-400 to-yellow-600' },
        diamond: { emoji: 'üíé', effect: 'glow-epic', color: 'from-blue-300 to-blue-500' },
        fire: { emoji: 'üî•', effect: 'glow-rare', color: 'from-red-400 to-orange-500' },
        ice: { emoji: 'üßä', effect: 'glow-rare', color: 'from-cyan-300 to-blue-400' }
      }
    },
    scissors: {
      emoji: '‚úåÔ∏è',
      label: '–ù–æ–∂–Ω–∏—Ü—ã',
      color: 'from-blue-400 to-blue-600',
      skins: {
        default: { emoji: '‚úåÔ∏è', effect: '' },
        gold: { emoji: '‚úåÔ∏è', effect: 'shimmer-effect', color: 'from-yellow-400 to-yellow-600' },
        laser: { emoji: '‚ö°', effect: 'glow-epic', color: 'from-purple-400 to-pink-500' },
        blade: { emoji: 'üó°Ô∏è', effect: 'glow-rare', color: 'from-gray-400 to-gray-700' }
      }
    },
    paper: {
      emoji: '‚úã',
      label: '–ë—É–º–∞–≥–∞',
      color: 'from-green-400 to-green-600',
      skins: {
        default: { emoji: '‚úã', effect: '' },
        gold: { emoji: '‚úã', effect: 'shimmer-effect', color: 'from-yellow-400 to-yellow-600' },
        magic: { emoji: 'üìú', effect: 'glow-epic', color: 'from-purple-400 to-indigo-500' },
        shield: { emoji: 'üõ°Ô∏è', effect: 'glow-rare', color: 'from-blue-400 to-gray-500' }
      }
    }
  };

  const config = choiceConfig[choice];
  const skinConfig = config.skins[skin] || config.skins.default;
  const finalColor = skinConfig.color || config.color;

  // –†–∞–∑–º–µ—Ä—ã
  const sizeClasses = {
    small: 'w-20 h-20 text-3xl',
    medium: 'w-28 h-28 text-5xl',
    large: 'w-36 h-36 text-6xl'
  };

  // –ö–ª–∞—Å—Å—ã –∞–Ω–∏–º–∞—Ü–∏–∏
  const animationClasses = () => {
    if (isAnimating) {
      if (isWinner === true) return 'animate-victory';
      if (isWinner === false) return 'animate-shake';
      return 'animate-spin';
    }
    return '';
  };

  return (
    <button
      onClick={onClick}
      disabled={disabled}
      className={`
        ${sizeClasses[size]}
        relative
        bg-gradient-to-br ${finalColor}
        rounded-2xl
        shadow-lg
        flex items-center justify-center
        transition-all duration-300
        ${!disabled ? 'choice-hover' : 'choice-disabled'}
        ${animationClasses()}
        ${skinConfig.effect}
      `}
    >
      {/* –û—Å–Ω–æ–≤–Ω–æ–π —ç–º–æ–¥–∑–∏ */}
      <span className="relative z-10 select-none">
        {skinConfig.emoji}
      </span>

      {/* –õ–µ–π–±–ª */}
      <span className="absolute -bottom-6 left-0 right-0 text-center text-sm font-medium text-gray-700">
        {config.label}
      </span>

      {/* –≠—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∫–∏—Ö —Å–∫–∏–Ω–æ–≤ */}
      {skinConfig.effect.includes('glow') && (
        <div className={`absolute inset-0 rounded-2xl ${skinConfig.effect}`} />
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—ã–∏–≥—Ä—ã—à–∞/–ø—Ä–æ–∏–≥—Ä—ã—à–∞ */}
      {isWinner !== null && !isAnimating && (
        <div className={`
          absolute -top-2 -right-2 
          w-8 h-8 rounded-full 
          flex items-center justify-center
          text-white font-bold
          ${isWinner ? 'bg-green-500' : 'bg-red-500'}
          animate-fade-in
        `}>
          {isWinner ? '‚úì' : '‚úó'}
        </div>
      )}
    </button>
  );
};

export default GameChoice;